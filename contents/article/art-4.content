{
    "id": 4,
    "header": {
        "title": "4Using Base Controllers In AngularJS - An Experiment",
        "sub_title": "Basic concept of Docker",
        "from": "",
        "translator": "Mason",
        "author": {
            "name": "梅东旭",
            "email": "dongxu.m@gmail.com",
            "weibo": "132132213",
            "twitter": "342432",
            "facebook": "fdsfsdfsdf"
        },
        "tags": ["Docker"],
        "info": {
            "date": 23123214,
            "comment": 312,
            "view": 1232,
            "like": 324,
            "unlike": 432
        },
        "desc": "Yesterday, in a conversation that I was having with Chris Schetter"
    },
    "content": "<p>Yesterday, in a conversation that I was having with Chris Schetter, I was rehashing how my JavaScript style has changed somewhat since I've started using AngularJS. Specifically, I've started using the Revealing Module Pattern a lot more than I ever have before. While many things have contributed to this shift, one feature, or lack thereof, was the inability to use Base Controllers in AngularJS. Since Controllers cannot be generated within Factories, it seemed that Base Controllers could only be provided through global references (which goes against everything that AngularJS stands for). That said, after my conversation yesterday, I wanted to give Base Controllers one more try.<\/p><p>In JavaScript, when you invoke a constructor function, the return value of the construtor matters. If you don't return anything, JavaScript will use the instantiated object as the result of the invocation. If, however, you return a value (other than \"this\") from the constructor function, JavaScript will use that return value as the result of the invocation.<\/p><p>When it comes to AngularJS, we can leverage this language feature to fake the ability to create Controllers inside of Factories. The idea is simple, but a bit confusing. And, after some trial and error, I finally got it to work. What we're going to do is turn our Controller into a factory.<\/p><header><h4>JavaScript<\/h4><\/header><p>When it comes to AngularJS, we can leverage this language feature to fake the ability to create Controllers inside of Factories. The idea is simple, but a bit confusing. And, after some trial and error, I finally got it to work. What we're going to do is turn our Controller into a factory.<\/p><pre class=\"pre-scrollable\">print hello world<\/pre>"
}